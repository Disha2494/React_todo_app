[{"/home/disha/react_django_todo_app/frontend/src/index.js":"1","/home/disha/react_django_todo_app/frontend/src/reportWebVitals.js":"2","/home/disha/react_django_todo_app/frontend/src/App.js":"3","/home/disha/react_django_todo_app/frontend/src/components/Modal.js":"4","/home/disha/Desktop/react_django_todo_app/frontend/src/index.js":"5","/home/disha/Desktop/react_django_todo_app/frontend/src/App.js":"6","/home/disha/Desktop/react_django_todo_app/frontend/src/reportWebVitals.js":"7","/home/disha/Desktop/react_django_todo_app/frontend/src/components/Modal.js":"8"},{"size":560,"mtime":1609847781325,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609845965016,"results":"11","hashOfConfig":"10"},{"size":4449,"mtime":1609850441020,"results":"12","hashOfConfig":"10"},{"size":2427,"mtime":1609848304777,"results":"13","hashOfConfig":"10"},{"size":560,"mtime":1609847781325,"results":"14","hashOfConfig":"15"},{"size":4766,"mtime":1610208595508,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609845965016,"results":"17","hashOfConfig":"15"},{"size":2427,"mtime":1609848304777,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"o0dlni",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"10h7ggb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/disha/react_django_todo_app/frontend/src/index.js",[],["38","39"],"/home/disha/react_django_todo_app/frontend/src/reportWebVitals.js",[],"/home/disha/react_django_todo_app/frontend/src/App.js",[],"/home/disha/react_django_todo_app/frontend/src/components/Modal.js",[],"/home/disha/Desktop/react_django_todo_app/frontend/src/index.js",[],["40","41"],"/home/disha/Desktop/react_django_todo_app/frontend/src/App.js",["42","43"],"import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'  \n\nconst API_URL = 'http://127.0.0.1:8000';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        title: '',\n        description: '',\n        label:'',\n        label_select: [],\n\tname: '',\n        todo: []\n    }  \n  }\n\n  getInitialState() {\n    return { title: '', description:'', label:''}\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { title, description, label } = this.state;\n\n    axios.post(`${API_URL}/todolist/`, { title, description, label})\n      .then((result) => {\n        console.log(result);\n        this.getTodos();\n    });\n    this.setState(this.getInitialState());\n    \n  }\n  onAdd = () => {\n    const { name } = this.state;\n\n    axios.post(`${API_URL}/category/`, { name })\n      .then((result) => {\n        console.log(result);\n\tthis.getLabels();\n    });\n\tthis.setState(this.getInitialState());\n\n  }\n\n  handleDelete = todo => {\n        axios\n          .delete(`${API_URL}/todolist/${todo}`)\n          .then(res => this.getTodos());\n      };\n  componentDidMount() {\n\t  this.getLabel();\n  }\ngetLabel(){\n    axios.get(`${API_URL}/category`)\n      .then(res => {\n        const label_select = res.data;\n        this.setState({ label_select });\n      })\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n\n      this.getTodos();\n  }\n\n  getTodos(){\n    axios.get(`${API_URL}/todolist`)\n      .then(res => {\n        const todo = res.data;\n        this.setState({ todo });\n      })\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n  }\n\n\n  render() {\n    const { title, description, label } = this.state;\n    return (\n<html>\n<head>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n</head>\n<body>\n      <div className=\"container\">\n        <div className=\"content\">\n          <h1>TodoApp</h1>\n          <form>\n          <div className=\"inputContainer\">\n              <input onChange={this.onChange} value={this.state.title} type=\"text\" id=\"title\" className=\"taskName\" placeholder=\"What do you need to do?\" name=\"title\" />\n              <label htmlFor=\"title\">Title</label>\n          </div>  \n          <div className=\"inputContainer\">\n              <input onChange={this.onChange} value={this.state.description} type=\"text\" id=\"description\" className=\"taskName\" placeholder=\"Breif about your task\" name=\"description\" />\n              <label htmlFor=\"description\">Description</label>\n            </div>\n            <div className=\"inputContainer half last\">\n              <i className=\"fa fa-caret-down selectArrow\" />\n              <select onChange={this.onChange} value={this.state.label} id=\"label\" className=\"taskCategory\" name=\"label\">\n                <option className=\"disabled\" value>Choose a label</option>\n                {this.state.label_select.map(label_select =>\n                  <option key={label_select.id} className=\"\" value={ label_select.id } name={ label_select.name }>{ label_select.name }</option>\n                )}\n              </select>\n              <label htmlFor=\"label\">Category</label>\n            </div>\n            <div>\n              <div className=\"row\">\n                <button className=\"taskAdd\" name=\"taskAdd\" onClick={this.onSubmit} type=\"submit\"><i className=\"fa fa-plus icon\" />Add task</button> &nbsp;\n              </div>\n            </div>\n\t   \n\t    <div className=\"inputContainer\">\n              <input onChange={this.onChange} value={this.state.name} type=\"text\" id=\"name\" className=\"name\" placeholder=\"Add Label\" name=\"name\" required />\n              <label htmlFor=\"name\">Name</label>\n          </div>\n\t    <div>\n              <div className=\"row\">\n                <button className=\"labelAdd\" name=\"labelAdd\" onClick={this.onAdd} type=\"submit\"><i className=\"fa fa-plus icon\" />Add Label</button> &nbsp;\n              </div>\n            </div>\n\t    <ul className=\"taskList\">\n              {this.state.todo.map(todo =>\n              <li key={todo.id} className=\"taskItem\">\n\t\t  <button className=\"taskDelete\" name=\"taskDelete\" onClick={() => this.handleDelete(todo.id)} type=\"submit\" ><i className=\"fa fa-trash-o\"/></button>&emsp;\n\t\t\t\n                  <input type=\"checkbox\" className=\"taskCheckbox\" name=\"checkedbox\" id={ todo.id } value={ todo.id } />\n                  <label htmlFor={ todo.id }><span className=\"complete-\">{ todo.title }</span></label>\n              </li>\n              )}\n            </ul>    \n          </form>\n        </div>\n      </div>\n</body>\n</html>\n    );\n  }\n}\n\nexport default App;\n","/home/disha/Desktop/react_django_todo_app/frontend/src/reportWebVitals.js",[],"/home/disha/Desktop/react_django_todo_app/frontend/src/components/Modal.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":87,"column":13,"nodeType":"52","messageId":"53","endLine":87,"endColumn":18},{"ruleId":"50","severity":1,"message":"54","line":87,"column":20,"nodeType":"52","messageId":"53","endLine":87,"endColumn":31},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"no-unused-vars","'title' is assigned a value but never used.","Identifier","unusedVar","'description' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]